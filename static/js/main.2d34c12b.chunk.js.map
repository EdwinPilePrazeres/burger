{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","hoc/Auxiliary/Auxiliary.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","ShowSideDrawer","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","console","log","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","instance","axios","create","baseURL","spinner","Loader","withErrorhandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","INGREDIENT_PRICES","salad","cheese","meat","bacon","withErrorHandler","totalPrice","purchasing","loading","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","get","then","data","catch","sum","disabledInfo","key","orderSummary","Spinner","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","formElementsArray","id","config","form","onSubmit","formElement","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","query","URLSearchParams","location","entries","param","path","match","render","ingredientName","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","orders","fetchedOrders","err","App","component","Orders","BurgerBuilder","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","app","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2d34c12b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2BMgb\",\"BreadTop\":\"BurgerIngredient_BreadTop__3i4c2\",\"Seeds1\":\"BurgerIngredient_Seeds1__2yBxr\",\"Seeds2\":\"BurgerIngredient_Seeds2__23IwB\",\"Meat\":\"BurgerIngredient_Meat__vlOHN\",\"Cheese\":\"BurgerIngredient_Cheese__1Af3P\",\"Salad\":\"BurgerIngredient_Salad__3QtUA\",\"Bacon\":\"BurgerIngredient_Bacon__3WhoG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer___NS2L\",\"Open\":\"SideDrawer_Open__2xKwF\",\"Close\":\"SideDrawer_Close__3u0OB\",\"Logo\":\"SideDrawer_Logo__1XpRg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2NSOP\",\"Label\":\"BuildControl_Label__WF41Z\",\"Less\":\"BuildControl_Less__3_0bL\",\"More\":\"BuildControl_More__fh9o7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input___B2OA\",\"Label\":\"Input_Label__hWnB8\",\"InputElement\":\"Input_InputElement__1yRbz\",\"Invalid\":\"Input_Invalid__3JcL3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__zHyL0\",\"Logo\":\"Toolbar_Logo__1KzZI\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3f8l4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2yxGP\",\"active\":\"NavigationItem_active__3UpRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3RlMY\",\"OrderButton\":\"BuildControls_OrderButton__1Ggz0\",\"enable\":\"BuildControls_enable__1Ac3P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3lGwj\",\"Success\":\"Button_Success__TPIGt\",\"Danger\":\"Button_Danger__1H1MM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__JJ6_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2c0_u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__qz9iq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3NyZr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2NZq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__yCsfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1JMvh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2KcPB\",\"load7\":\"Spinner_load7__2_eRf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2zt30\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2bIVM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__waiMd\"};","import React from 'react';\r\n\r\nconst aux = (props) => props.children;\r\n\r\nexport default aux;","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;\r\n\r\n","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem} >\r\n        <NavLink \r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li> \r\n)\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem> \r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem> \r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n         <div></div>\r\n         <div></div>\r\n         <div></div>   \r\n    </div>\r\n);\r\n\r\nexport default drawerToggle; ","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle \r\n            clicked={props.drawerToggleClicked}\r\n            />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        \r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => {\r\n    return (\r\n        props.show ? <div \r\n                        className={classes.Backdrop}\r\n                        onClick={props.clicked}\r\n                        ></div> : null\r\n    ) \r\n};\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    // ...\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                \r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n        \r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer : true\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false})\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState( (prevState) => {\r\n            return {showSideDrawer: !prevState.ShowSideDrawer};\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar \r\n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer\r\n                    open={this.state.showSideDrawer} \r\n                    closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n\r\n    render () {\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n    \r\n        }\r\n            return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\n\r\nconst burger = ( props ) => {\r\n    console.log(props);\r\n    let transformedIngredients = Object.keys( props.ingredients )\r\n        .map( igKey => {\r\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n            } );\r\n        } )\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []);\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients!</p>;\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button \r\n            className={classes.Less} \r\n            onClick={props.removed} \r\n            disabled={props.disabled} >Less</button>\r\n        <button \r\n            className={classes.More}\r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label ={ctrl.label} \r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]}\r\n                />\r\n        ))}\r\n        <button \r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}\r\n            >ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate( nextProps, nextState ) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     console.log('[Modal] Will Update')\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show = {this.props.show} clicked={this.props.modalClosed}/>\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\n\r\nclass OrderSummary extends Component {\r\n    //This could be a functional component, doesn't have to be a class\r\n    // componentDidUpdate() {\r\n    //     console.log('[OrderSummary] Will Update')\r\n    // }\r\n\r\n    render () {\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n        .map(igKey => {\r\n            return ( \r\n                <li key={igKey}>\r\n                    <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <Aux>\r\n                <h3>Your Order </h3>\r\n                <p> A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price.toFixed(2)} </strong></p>\r\n                <p>Continue to Checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL : 'https://react-my-burger-9575f.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\n\r\nconst withErrorhandler = ( WrappedComponent, axios ) => {\r\n    return class extends Component {\r\n\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error})\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject (this.reqInterceptor);\r\n            axios.interceptors.request.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null})\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default withErrorhandler;","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nconst INGREDIENT_PRICES = { \r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    \r\n    // contructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n\r\n    state = {\r\n        ingredients: null,\r\n        totalPrice : 4,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false,\r\n        error: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log(this.props);\r\n        axios.get('https://react-my-burger-9575f.firebaseio.com/Ingredients.json')\r\n            .then(response => {\r\n                this.setState({ingredients: response.data})\r\n            })\r\n            .catch(error => {\r\n                this.setState({error: true})\r\n            });\r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n     \r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        this.setState({purchasable: sum > 0 });\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount <= 0) {\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n        this.updatePurchaseState(updatedIngredients);\r\n    };\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        // alert(\"You continue!\");\r\n        \r\n        const queryParams = [];\r\n        for (let i in this.state.ingredients) {\r\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        }\r\n        queryParams.push('price=' + this.state.totalPrice);\r\n        const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            search: '?' + queryString\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <=0\r\n        }\r\n        let orderSummary = null;\r\n        \r\n          \r\n        \r\n        let burger = this.state.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n        if (this.state.ingredients) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.state.ingredients} />\r\n                    <BuildControls \r\n                        ingredientAdded={this.addIngredientHandler}\r\n                        ingredientRemoved={this.removeIngredientHandler}\r\n                        disabled={disabledInfo}\r\n                        price={this.state.totalPrice}\r\n                        purchasable={this.state.purchasable}\r\n                        ordered={this.purchaseHandler}\r\n                        />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                price={this.state.totalPrice}\r\n                ingredients={this.state.ingredients}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                />;\r\n                \r\n            if (this.state.loading) {\r\n                orderSummary = <Spinner />\r\n    \r\n            }\r\n        }\r\n        \r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal> \r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(BurgerBuilder, axios);\r\n","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputClasses = [classes.inputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched ) {\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}  \r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value} \r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select \r\n                    className={inputClasses.join(' ')} \r\n                    value={props.value}  \r\n                    onChange={props.changed} >\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option \r\n                            key={option.value}\r\n                            value={option.value}>\r\n                                {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value} \r\n                onChange={props.changed} />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}> \r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n    \r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country:{\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email:{\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            },\r\n        },\r\n        formIsValid: false,\r\n        \r\n        loading: false\r\n    }\r\n\r\n    orderHandler = ( event ) => {\r\n        event.preventDefault();\r\n        this.setState( { loading: true } );\r\n        const formData = {};\r\n        for (let formElementIdentifier  in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n        axios.post( '/orders.json', order )\r\n            .then( response => {\r\n                this.setState( { loading: false } );\r\n                this.props.history.push('/');\r\n            } )\r\n            .catch( error => {\r\n                this.setState( { loading: false } );\r\n            } );\r\n    }\r\n    \r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if (rules.minLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for(let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid})\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                \r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if ( this.state.loading ) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactData;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n    state = {\r\n        ingredients: null,\r\n        price: 0\r\n    }\r\n\r\n    componentWillMount () {\r\n        const query = new URLSearchParams( this.props.location.search );\r\n        const ingredients = {};\r\n        let price = 0;\r\n        for ( let param of query.entries() ) {\r\n            // ['salad', '1']\r\n            if (param[0] === 'price') {\r\n                price = param[1];\r\n            } else {\r\n                ingredients[param[0]] = +param[1];\r\n            }\r\n        }\r\n        this.setState( { ingredients: ingredients, totalPrice: price } );\r\n    }\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace( '/checkout/contact-data' );\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                <CheckoutSummary\r\n                    ingredients={this.state.ingredients}\r\n                    checkoutCancelled={this.checkoutCancelledHandler}\r\n                    checkoutContinued={this.checkoutContinuedHandler} />\r\n                <Route \r\n                    path={this.props.match.path + '/contact-data'} \r\n                    render={(props) => (<ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props} />)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkout;","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName, \r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        )\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }} \r\n            key={ig.name}> {ig.name} ({ig.amount})</span>;\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n} \r\n\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nclass Orders extends Component {\r\n\r\n    state = {\r\n        orders: [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        \r\n        axios.get('/orders.json')\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for(let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                this.setState({loading: false, orders: fetchedOrders});\r\n            })\r\n            .catch(err =>{\r\n                this.setState({loading:false});\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.orders.map(order => (\r\n                    <Order key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price}/>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(Orders, axios);","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Checkout from'./containers/Checkout/Checkout';\nimport { Route, Switch } from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/\"  component={BurgerBuilder} />\n          </Switch>       \n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n    \n\nReactDOM.render( app, document.getElementById('root'));\nregisterServiceWorker();\n\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}