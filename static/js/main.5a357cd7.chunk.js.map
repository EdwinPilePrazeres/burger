{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Auxiliary/Auxiliary.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/actionTypes.js","axios-orders.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","registerServiceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","console","log","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","instance","create","baseURL","initIngredients","dispatch","get","then","data","actionTypes","catch","purchaseBurger","orderData","post","id","orderId","purchaseBurgerSuccess","name","purchaseBurgerFail","fetchOrders","userId","queryParams","fetchedOrders","key","push","orders","err","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","email","password","isSignup","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","ingredientName","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","isNumeric","country","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","test","formElementsArray","config","form","onSubmit","formElement","loading","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","Auth","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","Logout","onLogout","App","onTryAutoSignup","routes","withRouter","getItem","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","purchaseInit","purchaseBurgerStart","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5a357cd7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2BMgb\",\"BreadTop\":\"BurgerIngredient_BreadTop__3i4c2\",\"Seeds1\":\"BurgerIngredient_Seeds1__2yBxr\",\"Seeds2\":\"BurgerIngredient_Seeds2__23IwB\",\"Meat\":\"BurgerIngredient_Meat__vlOHN\",\"Cheese\":\"BurgerIngredient_Cheese__1Af3P\",\"Salad\":\"BurgerIngredient_Salad__3QtUA\",\"Bacon\":\"BurgerIngredient_Bacon__3WhoG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer___NS2L\",\"Open\":\"SideDrawer_Open__2xKwF\",\"Close\":\"SideDrawer_Close__3u0OB\",\"Logo\":\"SideDrawer_Logo__1XpRg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2NSOP\",\"Label\":\"BuildControl_Label__WF41Z\",\"Less\":\"BuildControl_Less__3_0bL\",\"More\":\"BuildControl_More__fh9o7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input___B2OA\",\"Label\":\"Input_Label__hWnB8\",\"InputElement\":\"Input_InputElement__1yRbz\",\"Invalid\":\"Input_Invalid__3JcL3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__zHyL0\",\"Logo\":\"Toolbar_Logo__1KzZI\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3f8l4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2yxGP\",\"active\":\"NavigationItem_active__3UpRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3RlMY\",\"OrderButton\":\"BuildControls_OrderButton__1Ggz0\",\"enable\":\"BuildControls_enable__1Ac3P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3lGwj\",\"Success\":\"Button_Success__TPIGt\",\"Danger\":\"Button_Danger__1H1MM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__JJ6_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2c0_u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__qz9iq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3NyZr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2NZq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__yCsfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1JMvh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2KcPB\",\"load7\":\"Spinner_load7__2_eRf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2zt30\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2bIVM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__waiMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__t7yWU\"};","import React from 'react';\r\n\r\nconst aux = (props) => props.children;\r\n\r\nexport default aux;","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\r\n\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst navigationItem = ( props ) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink \r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\n\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = ( props ) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\">Orders</NavigationItem> : null}\r\n        {!props.isAuthenticated\r\n            ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\r\n            : <NavigationItem link=\"/logout\">Logout</NavigationItem>}\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\n\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\n\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\n\r\nconst toolbar = ( props ) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.drawerToggleClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth} />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\n\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\n\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst sideDrawer = ( props ) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth} />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer: false\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState( { showSideDrawer: false } );\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState( ( prevState ) => {\r\n            return { showSideDrawer: !prevState.showSideDrawer };\r\n        } );\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Toolbar\r\n                    isAuth={this.props.isAuthenticated}\r\n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer\r\n                    isAuth={this.props.isAuthenticated}\r\n                    open={this.state.showSideDrawer}\r\n                    closed={this.sideDrawerClosedHandler} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps )( Layout );","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render () {\r\n        let ingredient = null;\r\n\r\n        switch ( this.props.type ) {\r\n            case ( 'bread-bottom' ):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ( 'bread-top' ):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ( 'meat' ):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ( 'cheese' ):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ( 'bacon' ):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ( 'salad' ):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = ( props ) => {\r\n    console.log(props);\r\n    let transformedIngredients = Object.keys( props.ingredients )\r\n        .map( igKey => {\r\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n            } );\r\n        } )\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []);\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients!</p>;\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\n\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button \r\n            className={classes.Less} \r\n            onClick={props.removed} \r\n            disabled={props.disabled}>Less</button>\r\n        <button \r\n            className={classes.More} \r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\n\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst buildControls = ( props ) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed( 2 )}</strong></p>\r\n        {controls.map( ctrl => (\r\n            <BuildControl\r\n                key={ctrl.label}\r\n                label={ctrl.label}\r\n                added={() => props.ingredientAdded( ctrl.type )}\r\n                removed={() => props.ingredientRemoved( ctrl.type )}\r\n                disabled={props.disabled[ctrl.type]} />\r\n        ) )}\r\n        <button\r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'SIGN UP TO ORDER'}</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\n\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate ( nextProps, nextState ) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    componentWillUpdate () {\r\n        console.log('[Modal] WillUpdate');\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\n\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n    // This could be a functional component, doesn't have to be a class\r\n    componentWillUpdate() {\r\n        console.log('[OrderSummary] WillUpdate');\r\n    }\r\n\r\n    render () {\r\n        const ingredientSummary = Object.keys( this.props.ingredients )\r\n            .map( igKey => {\r\n                return (\r\n                    <li key={igKey}>\r\n                        <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n                    </li> );\r\n            } );\r\n\r\n        return (\r\n            <Aux>\r\n                <h3>Your Order</h3>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price.toFixed( 2 )}</strong></p>\r\n                <p>Continue to Checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OrderSummary;","import React from 'react';\r\n\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\n\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\n\r\nconst withErrorHandler = ( WrappedComponent, axios ) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentWillMount () {\r\n            this.reqInterceptor = axios.interceptors.request.use( req => {\r\n                this.setState( { error: null } );\r\n                return req;\r\n            } );\r\n            this.resInterceptor = axios.interceptors.response.use( res => res, error => {\r\n                this.setState( { error: error } );\r\n            } );\r\n        }\r\n\r\n        componentWillUnmount () {\r\n            axios.interceptors.request.eject( this.reqInterceptor );\r\n            axios.interceptors.response.eject( this.resInterceptor );\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState( { error: null } );\r\n        }\r\n\r\n        render () {\r\n            return (\r\n                <Aux>\r\n                    <Modal\r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler;","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL : 'https://react-my-burger-9575f.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = ( name ) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = ( name ) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = ( ingredients ) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    };\r\n};\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    };\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get( 'https://react-my-burger-9575f.firebaseio.com/Ingredients.json' )\r\n            .then( response => {\r\n               dispatch(setIngredients(response.data));\r\n            } )\r\n            .catch( error => {\r\n                dispatch(fetchIngredientsFailed());\r\n            } );\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = ( id, orderData ) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = ( orderData, token ) => {\r\n    return dispatch => {\r\n        dispatch( purchaseBurgerStart() );\r\n        axios.post( '/orders.json?auth=' + token, orderData )\r\n            .then( response => {\r\n                console.log( response.data );\r\n                dispatch( purchaseBurgerSuccess( response.data.name, orderData ) );\r\n            } )\r\n            .catch( error => {\r\n                dispatch( purchaseBurgerFail( error ) );\r\n            } );\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    };\r\n};\r\n\r\nexport const fetchOrdersSuccess = ( orders ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = ( error ) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get( '/orders.json' + queryParams)\r\n            .then( res => {\r\n                const fetchedOrders = [];\r\n                for ( let key in res.data ) {\r\n                    fetchedOrders.push( {\r\n                        ...res.data[key],\r\n                        id: key\r\n                    } );\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n            } )\r\n            .catch( err => {\r\n                dispatch(fetchOrdersFail(err));\r\n            } );\r\n    };\r\n};","import axios from 'axios';\r\n\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 1000);\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCiqGC1LYFbZOD55Anyig7Hv_bVM7mRifI';\r\n        if (!isSignup) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCiqGC1LYFbZOD55Anyig7Hv_bVM7mRifI';\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response);\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\r\n            }   \r\n        }\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport axios from '../../axios-orders';\r\n\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n    state = {\r\n        purchasing: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        console.log(this.props); \r\n        this.props.onInitIngredients();\r\n    }\r\n\r\n    updatePurchaseState ( ingredients ) {\r\n        const sum = Object.keys( ingredients )\r\n            .map( igKey => {\r\n                return ingredients[igKey];\r\n            } )\r\n            .reduce( ( sum, el ) => {\r\n                return sum + el;\r\n            }, 0 );\r\n        return sum > 0;\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuthenticated) {\r\n            this.setState( { purchasing: true } );\r\n        } else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState( { purchasing: false } );\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for ( let key in disabledInfo ) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null;\r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n        if ( this.props.ings ) {\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        isAuth={this.props.isAuthenticated}\r\n                        price={this.props.price} />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                price={this.props.price}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler} />;\r\n        }\r\n        // {salad: true, meat: false, ...}\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler( BurgerBuilder, axios ));","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = ( props ) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch ( props.elementType ) {\r\n        case ( 'input' ):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'textarea' ):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'select' ):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                    isNumeric: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your E-Mail'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n\r\n    orderHandler = ( event ) => {\r\n        event.preventDefault();\r\n  \r\n        const formData = {};\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData,\r\n            userId: this.props.userId\r\n        }\r\n\r\n        this.props.onOrderBurger(order, this.props.token);\r\n        \r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        \r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const updatedFormElement = { \r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for (let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid});\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            });\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if ( this.props.loading ) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Checkout extends Component {\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace( '/checkout/contact-data' );\r\n    }\r\n\r\n    render () {\r\n        let summary = <Redirect to=\"/\" />\r\n        if ( this.props.ings ) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\"/> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary\r\n                        ingredients={this.props.ings}\r\n                        checkoutCancelled={this.checkoutCancelledHandler}\r\n                        checkoutContinued={this.checkoutContinuedHandler} />\r\n                    <Route\r\n                        path={this.props.match.path + '/contact-data'}\r\n                        component={ContactData} />\r\n                </div>\r\n            );\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n};\r\n\r\nexport default connect( mapStateToProps )( Checkout );","import React from 'react';\r\n\r\nimport classes from './Order.module.css';\r\n\r\nconst order = ( props ) => {\r\n    const ingredients = [];\r\n\r\n    for ( let ingredientName in props.ingredients ) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName,\r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        );\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span \r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n                }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\r\n    });\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n    componentDidMount () {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render () {\r\n        let orders = <Spinner />;\r\n        if ( !this.props.loading ) {\r\n            orders = this.props.orders.map( order => (\r\n                <Order\r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price} />\r\n            ) )\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch( actions.fetchOrders(token, userId) )\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( withErrorHandler( Orders, axios ) );","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Mail Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isSignup: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n    checkValidity ( value, rules ) {\r\n        let isValid = true;\r\n        if ( !rules ) {\r\n            return true;\r\n        }\r\n\r\n        if ( rules.required ) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if ( rules.minLength ) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if ( rules.maxLength ) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if ( rules.isEmail ) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test( value ) && isValid\r\n        }\r\n\r\n        if ( rules.isNumeric ) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test( value ) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = ( event, controlName ) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity( event.target.value, this.state.controls[controlName].validation ),\r\n                touched: true\r\n            }\r\n        };\r\n        this.setState( { controls: updatedControls } );\r\n    }\r\n\r\n    submitHandler = ( event ) => {\r\n        event.preventDefault();\r\n        this.props.onAuth( this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup );\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isSignup: !prevState.isSignup};\r\n        });\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for ( let key in this.state.controls ) {\r\n            formElementsArray.push( {\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            } );\r\n        }\r\n\r\n        let form = formElementsArray.map( formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={( event ) => this.inputChangedHandler( event, formElement.id )} />\r\n        ) );\r\n\r\n        if (this.props.loading) {\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        let authRedirect = null;\r\n        if (this.props.isAuthenticated) {\r\n            authRedirect = <Redirect to={this.props.authRedirectPath}/>\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button \r\n                    clicked={this.switchAuthModeHandler}\r\n                    btnType=\"Danger\">SWITCH TO {this.state.isSignup ? 'SIGNIN' : 'SIGNUP'}</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: ( email, password, isSignup ) => dispatch( actions.auth( email, password, isSignup ) ),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n    };\r\n};\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps )( Auth );","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount () {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render () {\r\n        return <Redirect to=\"/\"/>;\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/index';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.onTryAutoSignup();\n  }\n\n  render () {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if ( this.props.isAuthenticated ) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n\n    return (\n      <div>\n        <Layout>\n          {routes}\n        </Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch( actions.authCheckState() )\n  };\n};\n\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )( App ) );\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 4,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient = ( state, action ) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 }\r\n    const updatedIngredients = updateObject( state.ingredients, updatedIngredient );\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject( state, updatedState );\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 }\r\n    const updatedIngs = updateObject( state.ingredients, updatedIng );\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n        building: true\r\n    }\r\n    return updateObject( state, updatedSt );\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject( state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false,\r\n        building: false\r\n    } );\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject( state, { error: true } );\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.ADD_INGREDIENT: return addIngredient( state, action );\r\n        case actionTypes.REMOVE_INGREDIENT: return removeIngredient(state, action);\r\n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action);    \r\n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action);\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst purchaseInit = ( state, action ) => {\r\n    return updateObject( state, { purchased: false } );\r\n};\r\n\r\nconst purchaseBurgerStart = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\nconst purchaseBurgerSuccess = ( state, action ) => {\r\n    const newOrder = updateObject( action.orderData, { id: action.orderId } );\r\n    return updateObject( state, {\r\n        loading: false,\r\n        purchased: true,\r\n        orders: state.orders.concat( newOrder )\r\n    } );\r\n};\r\n\r\nconst purchaseBurgerFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\nconst fetchOrdersStart = ( state, action ) => {\r\n    return updateObject( state, { loading: true } );\r\n};\r\n\r\nconst fetchOrdersSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        orders: action.orders,\r\n        loading: false\r\n    } );\r\n};\r\n\r\nconst fetchOrdersFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit( state, action );\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart( state, action );\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess( state, action )\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail( state, action );\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart( state, action );\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess( state, action );\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail( state, action );\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n};\r\n\r\nconst authStart = ( state, action ) => {\r\n    return updateObject( state, { error: null, loading: true } );\r\n};\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject( state, { \r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n     } );\r\n};\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject( state, {\r\n        error: action.error,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst authLogout = (state, action) => {\r\n    return updateObject(state, { token: null, userId: null });\r\n};\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return updateObject(state, { authRedirectPath: action.path })\r\n}\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.AUTH_START: return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render( app, document.getElementById( 'root' ) );\nregisterServiceWorker();\n"],"sourceRoot":""}