{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Auxiliary/Auxiliary.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/actionTypes.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","App.js","registerServiceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","to","link","exact","activeClassName","active","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","ShowSideDrawer","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","console","log","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","instance","axios","create","baseURL","spinner","Loader","withErrorhandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","ADD_INGREDIENT","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","initIngredients","dispatch","get","then","data","actionTypes","catch","purchaseBurger","orderData","purchaseBurgerStart","post","id","orderId","purchaseBurgerSuccess","name","purchaseBurgerFail","fetchOrders","fetchedOrders","key","push","orders","err","auth","email","password","isSignup","authData","returnecureToken","url","token","userId","idToken","localId","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","onInitIngredients","sum","disabledInfo","ings","orderSummary","Spinner","onIgredientAdded","onIngredientRemoved","updatePurchaseState","connect","burgerBuilder","totalPrice","ingName","ingredientName","actions","withErrorHandler","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","isEmail","test","isNumeric","formElementsArray","config","form","onSubmit","formElement","loading","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchsedRedirect","purchased","path","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","Auth","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","errorMessage","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","fetchIngredientsFailed","reducer","purchaseInit","newOrder","od","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","authStart","authSuccess","authFail","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a97c24cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2BMgb\",\"BreadTop\":\"BurgerIngredient_BreadTop__3i4c2\",\"Seeds1\":\"BurgerIngredient_Seeds1__2yBxr\",\"Seeds2\":\"BurgerIngredient_Seeds2__23IwB\",\"Meat\":\"BurgerIngredient_Meat__vlOHN\",\"Cheese\":\"BurgerIngredient_Cheese__1Af3P\",\"Salad\":\"BurgerIngredient_Salad__3QtUA\",\"Bacon\":\"BurgerIngredient_Bacon__3WhoG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer___NS2L\",\"Open\":\"SideDrawer_Open__2xKwF\",\"Close\":\"SideDrawer_Close__3u0OB\",\"Logo\":\"SideDrawer_Logo__1XpRg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2NSOP\",\"Label\":\"BuildControl_Label__WF41Z\",\"Less\":\"BuildControl_Less__3_0bL\",\"More\":\"BuildControl_More__fh9o7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input___B2OA\",\"Label\":\"Input_Label__hWnB8\",\"InputElement\":\"Input_InputElement__1yRbz\",\"Invalid\":\"Input_Invalid__3JcL3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__zHyL0\",\"Logo\":\"Toolbar_Logo__1KzZI\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3f8l4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2yxGP\",\"active\":\"NavigationItem_active__3UpRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3RlMY\",\"OrderButton\":\"BuildControls_OrderButton__1Ggz0\",\"enable\":\"BuildControls_enable__1Ac3P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3lGwj\",\"Success\":\"Button_Success__TPIGt\",\"Danger\":\"Button_Danger__1H1MM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__JJ6_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2c0_u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__qz9iq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3NyZr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2NZq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__yCsfI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1JMvh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2KcPB\",\"load7\":\"Spinner_load7__2_eRf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2zt30\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2bIVM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__waiMd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__t7yWU\"};","import React from 'react';\r\n\r\nconst aux = (props) => props.children;\r\n\r\nexport default aux;","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png'\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = (props) => (\r\n    <div className={classes.Logo} style={{height: props.height}}>\r\n        <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n);\r\n\r\nexport default logo;\r\n\r\n","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem} >\r\n        <NavLink \r\n            to={props.link}\r\n            exact={props.exact}\r\n            activeClassName={classes.active}>{props.children}</NavLink>\r\n    </li> \r\n)\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = () => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem> \r\n        <NavigationItem link=\"/orders\">Orders</NavigationItem> \r\n        <NavigationItem link=\"/auth\">Authenticate</NavigationItem> \r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n         <div></div>\r\n         <div></div>\r\n         <div></div>   \r\n    </div>\r\n);\r\n\r\nexport default drawerToggle; ","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle \r\n            clicked={props.drawerToggleClicked}\r\n            />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        \r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems />\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => {\r\n    return (\r\n        props.show ? <div \r\n                        className={classes.Backdrop}\r\n                        onClick={props.clicked}\r\n                        ></div> : null\r\n    ) \r\n};\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst sideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    // ...\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.closed}/>\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                \r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n        \r\n    );\r\n}\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        showSideDrawer : true\r\n    }\r\n\r\n    sideDrawerClosedHandler = () => {\r\n        this.setState({showSideDrawer: false})\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState( (prevState) => {\r\n            return {showSideDrawer: !prevState.ShowSideDrawer};\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Toolbar \r\n                    drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n                <SideDrawer\r\n                    open={this.state.showSideDrawer} \r\n                    closed={this.sideDrawerClosedHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Layout;","import React, { Component } from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BurgerIngredient extends Component {\r\n\r\n    render () {\r\n        let ingredient = null;\r\n\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredient = <div className={classes.BreadBottom}></div>\r\n                break;\r\n            case ('bread-top'):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ('meat'):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ('cheese'):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ('bacon'):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ('salad'):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            default:\r\n                ingredient = null;\r\n    \r\n        }\r\n            return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\r\n\r\nconst burger = ( props ) => {\r\n    console.log(props);\r\n    let transformedIngredients = Object.keys( props.ingredients )\r\n        .map( igKey => {\r\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n            } );\r\n        } )\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []);\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please start adding ingredients!</p>;\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button \r\n            className={classes.Less} \r\n            onClick={props.removed} \r\n            disabled={props.disabled} >Less</button>\r\n        <button \r\n            className={classes.More}\r\n            onClick={props.added}>More</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map(ctrl => (\r\n            <BuildControl \r\n                key={ctrl.label} \r\n                label ={ctrl.label} \r\n                added={() => props.ingredientAdded(ctrl.type)}\r\n                removed={() => props.ingredientRemoved(ctrl.type)}\r\n                disabled={props.disabled[ctrl.type]}\r\n                />\r\n        ))}\r\n        <button \r\n            className={classes.OrderButton}\r\n            disabled={!props.purchasable}\r\n            onClick={props.ordered}\r\n            >ORDER NOW</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n\r\n    shouldComponentUpdate( nextProps, nextState ) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     console.log('[Modal] Will Update')\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show = {this.props.show} clicked={this.props.modalClosed}/>\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        )\r\n    }\r\n} \r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button\r\n        disabled={props.disabled}\r\n        className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { Component } from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\n\r\nclass OrderSummary extends Component {\r\n    //This could be a functional component, doesn't have to be a class\r\n    // componentDidUpdate() {\r\n    //     console.log('[OrderSummary] Will Update')\r\n    // }\r\n\r\n    render () {\r\n        const ingredientSummary = Object.keys(this.props.ingredients)\r\n        .map(igKey => {\r\n            return ( \r\n                <li key={igKey}>\r\n                    <span style={{textTransform: 'capitalize'}}>{igKey}</span>: {this.props.ingredients[igKey]}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <Aux>\r\n                <h3>Your Order </h3>\r\n                <p> A delicious burger with the following ingredients:</p>\r\n                <ul>\r\n                    {ingredientSummary}\r\n                </ul>\r\n                <p><strong>Total Price: {this.props.price.toFixed(2)} </strong></p>\r\n                <p>Continue to Checkout?</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\r\n            </Aux>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderSummary;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL : 'https://react-my-burger-9575f.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\n\r\nconst withErrorhandler = ( WrappedComponent, axios ) => {\r\n    return class extends Component {\r\n\r\n        state = {\r\n            error: null\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error})\r\n            });\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject (this.reqInterceptor);\r\n            axios.interceptors.request.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null})\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal \r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );\r\n        }\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default withErrorhandler;","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const setIngredients = (ingredients) => {\r\n        return {\r\n            type: actionTypes.SET_INGREDIENTS,\r\n            ingredients: ingredients\r\n        }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n            axios.get('https://react-my-burger-9575f.firebaseio.com/Ingredients.json')\r\n            .then(response => {\r\n                dispatch(setIngredients(response.data));\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchIngredientsFailed());\r\n            });\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return  {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    }\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error,\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post( '/orders.json', orderData )\r\n        .then( response => {\r\n            console.log(response.data)\r\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData))\r\n            // this.setState( { loading: false } );\r\n            // this.props.history.push('/');\r\n        } )\r\n        .catch( error => {\r\n            dispatch(purchaseBurgerFail(error))\r\n            // this.setState( { loading: false } );\r\n        } );\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return  {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START,\r\n\r\n    }\r\n};\r\n\r\nexport const fetchOrders = () => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        axios.get('/orders.json')\r\n            .then(res => {\r\n                const fetchedOrders = [];\r\n                for(let key in res.data) {\r\n                    fetchedOrders.push({\r\n                        ...res.data[key],\r\n                        id: key\r\n                    });\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n                // this.setState({loading: false, orders: fetchedOrders});\r\n            })\r\n            .catch(err =>{\r\n                // this.setState({loading:false});\r\n            })\r\n    };\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        token: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail =(error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = { \r\n            email:email,\r\n            password: password,\r\n            returnecureToken: true\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCiqGC1LYFbZOD55Anyig7Hv_bVM7mRifI';\r\n        if (!isSignup){\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCiqGC1LYFbZOD55Anyig7Hv_bVM7mRifI'\r\n        }\r\n        axios.post(url, authData)\r\n            .then(response => {\r\n                console.log(response);\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n            })\r\n            .catch(err => {\r\n                dispatch(authFail(err.response.data.error));\r\n            });\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n    \r\n    // contructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n\r\n    state = {\r\n\r\n        purchasing: false,\r\n        // loading: false,\r\n        // error: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props);\r\n        this.props.onInitIngredients();\r\n\r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n     \r\n        const sum = Object.keys(ingredients)\r\n            .map(igKey => {\r\n                return ingredients[igKey];\r\n            })\r\n            .reduce((sum, el) => {\r\n                return sum + el;\r\n            }, 0);\r\n        return sum > 0\r\n    }\r\n\r\n    \r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        const disabledInfo = {\r\n            // ...this.state.ingredients\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <=0\r\n        }\r\n        let orderSummary = null;\r\n        \r\n          \r\n        \r\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n        // if (this.state.ingredients) {\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <Aux>\r\n                    {/* <Burger ingredients={this.state.ingredients} /> */}\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls \r\n                        // ingredientAdded={this.addIngredientHandler}\r\n                        ingredientAdded={this.props.onIgredientAdded}\r\n                        // ingredientRemoved={this.removeIngredientHandler}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        price={this.props.price}\r\n                        purchasable={this.updatePurchaseState(this.props.ings)}\r\n                        ordered={this.purchaseHandler}\r\n                        />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                price={this.props.price}\r\n                // ingredients={this.state.ingredients}\r\n                ingredients={this.props.ings}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                />;\r\n                \r\n            // if (this.state.loading) {\r\n            //     orderSummary = <Spinner />\r\n    \r\n            // }\r\n        }\r\n        \r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal> \r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIgredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n        onInitIngredients: () => dispatch(actions.initIngredients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit())\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\r\n","import React from 'react';\r\n\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputClasses = [classes.inputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched ) {\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}  \r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value} \r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select \r\n                    className={inputClasses.join(' ')} \r\n                    value={props.value}  \r\n                    onChange={props.changed} >\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option \r\n                            key={option.value}\r\n                            value={option.value}>\r\n                                {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value} \r\n                onChange={props.changed} />\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}> \r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n    \r\n};\r\n\r\nexport default input;","import React, { Component } from 'react';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport { connect } from 'react-redux';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\r\nimport withErrorhandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipCode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP Code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5,\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            country:{\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email:{\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'}\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validation: {},\r\n                valid: true\r\n            },\r\n        },\r\n        formIsValid: false,\r\n        \r\n        // loading: false\r\n    }\r\n\r\n    orderHandler = ( event ) => {\r\n        event.preventDefault();\r\n        \r\n        const formData = {};\r\n        for (let formElementIdentifier  in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ings,\r\n            price: this.props.price,\r\n            orderData: formData\r\n        }\r\n\r\n        this.props.onOrderBurger(order);\r\n        \r\n    }\r\n    \r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n        if (rules.minLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n        if (rules.isEmail) {\r\n            const pattern = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n            isValid = pattern.test(value) && isValid\r\n\r\n        //     isValid = pattern.test(value) && isValid\r\n        }\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        };\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        \r\n        let formIsValid = true;\r\n        for(let inputIdentifier in updatedOrderForm) {\r\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid})\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                \r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id}\r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\r\n                ))}\r\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if ( this.state.loading ) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorhandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Checkout extends Component {\r\n\r\n\r\n\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace( '/checkout/contact-data' );\r\n    }\r\n\r\n    render () {\r\n        let summary = <Redirect to=\"/\" />\r\n        if (this.props.ings) {\r\n            const purchsedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n            summary =(\r\n                <div>\r\n                    {purchsedRedirect}\r\n                    <CheckoutSummary\r\n                        ingredients={this.props.ings}\r\n                        checkoutCancelled={this.checkoutCancelledHandler}\r\n                        checkoutContinued={this.checkoutContinuedHandler} />\r\n                    <Route \r\n                        path={this.props.match.path + '/contact-data'} \r\n                        component = {ContactData} />\r\n                </div>\r\n            );\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push(\r\n            {\r\n                name: ingredientName, \r\n                amount: props.ingredients[ingredientName]\r\n            }\r\n        )\r\n    }\r\n\r\n    const ingredientOutput = ingredients.map(ig => {\r\n        return <span\r\n            style={{\r\n                textTransform: 'capitalize',\r\n                display: 'inline-block',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }} \r\n            key={ig.name}> {ig.name} ({ig.amount})</span>;\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingredientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    )\r\n} \r\n\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders();\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if (!this.props.loading) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order \r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price} />\r\n                )\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: () => dispatch(actions.fetchOrders())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (withErrorHandler(Orders, axios));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Mail Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isSignup: true\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n        \r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        };\r\n        this.setState({controls: updatedControls});\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n    }\r\n\r\n    switchAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                isSignup: !prevState.isSignup\r\n            }\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const formElementsArray = [];\r\n        for ( let key in this.state.controls ) {\r\n            formElementsArray.push( {\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            } );\r\n        }\r\n\r\n        let form = formElementsArray.map( formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                changed={( event ) => this.inputChangedHandler( event, formElement.id )} />\r\n        ) );\r\n\r\n        if(this.props.loading) {\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n\r\n        if(this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button \r\n                    clicked  = {this.switchAuthModeHandler}\r\n                    btnType=\"Danger\">SWITCH TO {this.state.isSignup ?  'SIGNIN' : 'SIGNUP'}</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","import React, { Component } from 'react';\nimport Layout from './hoc/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Checkout from'./containers/Checkout/Checkout';\nimport { Route, Switch } from 'react-router-dom';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/\"  component={BurgerBuilder} />\n          </Switch>       \n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}","export const updateObject =  (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice : 4,\r\n    error: false,\r\n};\r\n\r\nconst INGREDIENT_PRICES = { \r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient = (state, action) => {\r\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 };\r\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n    }\r\n    return updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIngredient = (state, action) => {\r\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 };\r\n    const updatedIngs = updateObject(state.ingredients, updatedIng);\r\n    const updatedSt = {\r\n        ingredients: updatedIngs,\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n    }\r\n    return updateObject(state, updatedSt);\r\n};\r\n\r\nconst setIngredients = (state, action) => {\r\n    return updateObject(state, {\r\n        ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        totalPrice: 4,\r\n        error: false\r\n    });\r\n};\r\n\r\nconst fetchIngredientsFailed = (state, action) => {\r\n    return updateObject(state, { error: true });\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return addIngredient(state, action);\r\n\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return removeIngredient(state, action);    \r\n\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return setIngredients(state, action);\r\n\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return fetchIngredientsFailed(state, action);    \r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n// import { fetchOrdersFail, fetchOrdersStart } from '../actions/order';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst purchaseInit = (state, action) => {\r\n    return updateObject(state, { purchased: false });\r\n};\r\n\r\nconst purchaseBurgerStart = (state, action) => {\r\n    return updateObject(state, { loading: true });\r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\n    const newOrder = updateObject(action.orderData, { od: action.orderId }); \r\n\r\n    return updateObject(state, {\r\n        loading: false,\r\n        purchased: true,\r\n        orders: state.orders.concat(newOrder)\r\n    });\r\n};\r\n\r\nconst purchaseBurgerFail = (state, action) => {\r\n    return updateObject(state, { loading: false });\r\n};\r\n\r\nconst fetchOrdersStart = (state, action) => {\r\n    return updateObject(state, { loading: true });\r\n};\r\n\r\nconst fetchOrdersSuccess = (state, action) => {\r\n    return updateObject(state, {\r\n        orders: action.orders,\r\n        loading: false\r\n    });\r\n};\r\n\r\nconst fetchOrdersFail = (state, action) => {\r\n    return updateObject( state, {\r\n        loading: false,\r\n    });\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return purchaseInit(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return purchaseBurgerStart(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            return purchaseBurgerSuccess(state, action);\r\n\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return purchaseBurgerFail(state, action);\r\n\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return fetchOrdersStart(state, action);\r\n            \r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return fetchOrdersSuccess(state, action);\r\n\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return fetchOrdersFail(state, action);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = { \r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return updateObject(state, { error: null, loading: true});\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return updateObject ( state,  { \r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null,\r\n        loading: false\r\n     });\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return updateObject( state, {\r\n        error: action.error,\r\n        loading: false\r\n    })\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return authStart(state, action);\r\n        case actionTypes.AUTH_SUCCESS: \r\n            return authSuccess(state,action);\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail(state, action);\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport thunk from 'redux-thunk';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers ({\n    burgerBuilder: burgerBuilderReducer,\n    order: orderReducer,\n    auth: authReducer\n})\n\nconst store = createStore( rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n) );\n\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n    \n\nReactDOM.render( app, document.getElementById('root'));\nregisterServiceWorker();\n\n\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}